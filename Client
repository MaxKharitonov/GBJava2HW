package Lesson6;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.Scanner;

public class Client {
     private Socket socket;
     private DataInputStream in;
     private DataOutputStream out;

        public static void main(String[] args) {
        Client client = new Client();
        client.start();							
        }														
        
        private void start() {										
        try {    
        openConnection();
        Scanner scanner = new Scanner(System.in);
        while (true) {												
        String msg = scanner.nextLine();
        if ("/end".equalsIgnoreCase(msg)) {
             break;
        } 
             out.writeUTF(msg);
             }
                  scanner.close();														
                  } catch (IOException e) {
                        e.printStackTrace();
                  }
             }
								
            public void openConnection() throws IOException {
            socket = new Socket("localhost", 8189);
            in = new DataInputStream(socket.getInputStream());
            out = new DataOutputStream(socket.getOutputStream());
            new Thread(new Runnable() {
                @Override
                public void run() {
                    try {
                        while (true) {
                            String msgServer = in.readUTF();
                            if ("/end".equalsIgnoreCase(msgServer)) {
                                break;
                            }
                            System.out.println(msgServer);
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    } finally {
                        closeConnection();
                    }
                }
            }).start();
	}
								
        public void closeConnection() {
            try {
                in.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
            try {
                out.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
            try {
                socket.close();
	    } catch (IOException e) {
                e.printStackTrace();
	}
    }
}
